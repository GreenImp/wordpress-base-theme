/**
 * Author: GreenImp Web
 * Date Created: 27/01/13 01:42
 */

;
(function($, window, document){
	// list of available methods
	var methods = {
				init: function(options){
					return this;
				}
			}, onLoad = [];

	/**
	 * Base Bill method
	 *
	 * @param method
	 * @return {*}
	 */
	$.fn.bill = function(method){
		// Method calling logic
		if(methods[method]){
			return methods[ method ].apply(this, Array.prototype.slice.call(arguments, 1));
		}else if(typeof method === 'object' || !method){
			return methods.init.apply(this, arguments);
		}else{
			$.error('Method ' + method + ' does not exist on bill');
			return this;
		}
	};


	/**
	 * Basic functionality
	 */
	/**
 * Author: leelangley
 * Date Created: 19/03/2013 10:44
 */

/**
 * jQuery extension functions
 */
$.extend({
	/**
	 * Adds jQuery function for getting the URL query strings.
	 * If `name` is defined, then it will return that named value
	 *
	 * @param name
	 * @returns {*}
	 */
	getQueryString:function(name){
		var queryString = window.location.search.substr(1);
		if(!queryString){
			// no query string
			return name ? null : {};
		}

		// check for a cached query string
		var cache = $(window).data('queryString');
		cache = $.extend(cache, {}); // ensure that the cache is an object

		if(!cache[queryString]){
			// no cache exists for the current query string

			// get the query string and split by &
			var queryVars = queryString.split('&'),
				arrayCheck = /^([^\[]+)((\[[^\]]*\])+)$/,
				arrayKeyCheck = /\[[^\]]*\]/g;

			// the query string variable
			cache[queryString] = {};

			// loop through each key=>value pair
			for(var i = 0; i < queryVars.length; i++){
				if(queryVars[i]){
					var variable = queryVars[i].split('='),
						key = decodeURIComponent(variable[0]),
						value = (typeof variable[1] == 'string') ? decodeURIComponent(variable[1].replace(/\+/g, ' ')) : undefined;

					// check if the key is an array
					if(arrayCheck.test(key)){
						// key is an array
						key = RegExp.$1;	// the key

						// ensure that they key is initialised as a variable of the cache
						cache[queryString][key] = cache[queryString][key] || {length: 0};

						var arrayNames = '',							// string of previous array key names
							arrays = RegExp.$2.match(arrayKeyCheck),	// list of array key names
							arrayLen = arrays.length;					// count of array key names
						// loop through the array key names and create the variables
						$.each(arrays, function(i, subKey){
							// determine the key name - if it is a string, we use it, if it is empty we calculate the numeric number, from the current array length
							subKey = (subKey && (subKey != '[]')) ? '"' + subKey.replace(/\[|\]/g, '') + '"' : eval('cache[queryString][key]' + arrayNames + '.length');

							// create the variable - I KNOW that using eval is horrible, but it's the best solution I could come up with quickly.
							eval('cache[queryString][key]' + arrayNames + '[' + subKey + '] = cache[queryString][key]' + arrayNames + '[' + subKey + '] || ' + ((i+1 == arrayLen) ? 'value' : '[]'));

							// add the array key to the list
							arrayNames += !isNaN(subKey) ? '' : '[' + subKey + ']';
						});

						//cache[queryString][key][RegExp.$2 ? RegExp.$2 : cache[queryString][key].length] = value;
						cache[queryString][key].length++;
					}else{
						cache[queryString][key] = value;
					}
				}
			}

			// cache the result
			$(window).data('queryString', cache);
		}

		return name ? cache[queryString][name] : cache[queryString];
	},
	/**
	 * Returns the viewport size
	 *
	 * @returns {{width: number, height: number}}
	 */
	viewport:function(){
		var $window = $(window);

		return {
			width:Math.max($window.innerWidth(), window.innerWidth),
			height:Math.max($window.innerHeight(), window.innerHeight)
		}
	}
});



/* ==========================================================================
 * Array Functions
 * ========================================================================== */

/*
 * Array max function,
 * returns the highest number, in the array
 *
 * Used like:
 *
 * `var myArray = [1, 10, 458, 12],
 * 	max = myArray.max();
 * console.log(max); // outputs 458`
 */
Array.prototype.max = function(){
	return Math.max.apply(null, this)
};

/*
 * Array min function,
 * returns the lowest number, in the array
 *
 * Used like:
 *
 * `var myArray = [1, 10, 458, 12],
 * 	min = myArray.min();
 * console.log(min); // outputs 1`
 */
Array.prototype.min = function(){
	return Math.min.apply(null, this)
};

/*
 * Array sum function,
 * returns the sum total of all values, in the array
 *
 * Used like:
 *
 * `var myArray = [1, 10, 458, 12],
 * 	sum = myArray.sum();
 * console.log(sum); // outputs 481`
 */
Array.prototype.sum = function(){
	var length = this.length,
	sum = 0;
	for(var i = 0; i < length; i++){
		sum += parseFloat(this[i]);
	}

	return sum;
};



/* ==========================================================================
 * Object Functions
 * ========================================================================== */

if(typeof Object.defineProperty == 'function'){
	/**
	 * Checks if the given object is equal
	 * to (same as) the current object.
	 *
	 * @param obj
	 * @returns {boolean}
	 */
	Object.defineProperty(Object.prototype, 'equals', {
		value:function(obj){
			var i;
			for(i in this){
				if(typeof(obj[i])=='undefined'){
					return false;
				}
			}

			for(i in this){
				if(this[i]){
					switch(typeof(this[i])){
						case 'object':
							if(!this[i].equals(obj[i])){
								return false;
							}
						break;
						case 'function':
							if(
								typeof(obj[i]) == 'undefined' ||
								(i != 'equals' && this[i].toString() != obj[i].toString())
							){
								return false;
							}
						break;
						default:
							if(this[i] != obj[i]){
								return false;
							}
						break;
					}
				}else{
					if (obj[i])
					return false;
				}
			}

			for(i in obj){
				if(typeof(this[i]) == 'undefined'){
					return false;
				}
			}

			return true;
		  }
	});
}
	/**
 * Checks if the current browser is supported.
 * If not, a message is displayed to the user,
 * to alert them that they are using an out-dated
 * browser.
 *
 * 'options' contains a list of browsers and the
 * earliest supported version number.
 * By default, ie support is set to 9.
 * All others have full support.
 *
 * @param options
 * @return {*}
 */
methods.browserNotice = function(options){
	// list of browsers to check for
	options = $.extend({
		ie:9,
		ff:null,
		chrome:null,
		safari:null,
		opera:null
	}, options);

	// check if the browser is supported or not
	var supported = true,
		userAgent = navigator.userAgent;
	if(options.ie && !isNaN(options.ie) && (/MSIE (\d+\.\d+);/.test(userAgent))){
		// browser is IE
		if(parseFloat(RegExp.$1) < parseFloat(options.ie)){
			// version not supported
			supported = false;
		}
	}else if(options.ff && !isNaN(options.ff) && (/Firefox[\/\s](\d+\.\d+)/.test(userAgent))){
		// browser is Firefox
		if(parseFloat(RegExp.$1) < parseFloat(options.ff)){
			// version not supported
			supported = false;
		}
	}else if(options.chrome && !isNaN(options.chrome) && (/Chrome[\/\s](\d+\.\d+)/.test(userAgent))){
		// browser is Chrome
		if(parseFloat(RegExp.$1) < parseFloat(options.chrome)){
			// version not supported
			supported = false;
		}
	}else if(options.safari && !isNaN(options.safari) && (/Version[\/\s](\d+\.\d+)(.\d+)*\s+Safari/.test(userAgent))){
		// browser is Safari
		if(parseFloat(RegExp.$1) < parseFloat(options.safari)){
			// version not supported
			supported = false;
		}
	}else if(options.opera && !isNaN(options.opera) && (/Opera.*?Version[\/\s](\d+\.\d+)/.test(userAgent))){
		// browser is Opera
		if(parseFloat(RegExp.$1) < parseFloat(options.opera)){
			// version not supported
			supported = false;
		}
	}

	if(!supported){
		// browser not supported
		var animSpeed = 600,
			noticeBox = $('<div id="browserNotice" class="container">' +
			'<div class="row">' +
				'<div class="column eight">' +
					'<p>It looks like you\'re using an outdated web browser. We don\'t support old browsers, as they have limited features and security issues.</p>' +
					'<p>You should consider upgrading.</p>' +
				'</div>' +
				'<div class="column four">' +
					'<a href="http://browsehappy.com/" title="Upgrade your browser at Browse Happy" target="_blank"  class="button">Find out more</a>' +
				'</div>' +
			'</div>' +
		'</div>');

		$('body')
				// add the browser notice
				.prepend(noticeBox)
				// slide the whole page down, by the height of the notice (so page content doesn't get cut off)
				.animate({'padding-top':noticeBox.outerHeight()}, animSpeed);

		// slide the browser notice into view
		noticeBox.hide().slideDown(animSpeed);
	}

	// return 'this' to allow chain-ability
	return this;
};

	/**
	 * UI functionality
	 */
	/**
 * Adds accordion functionality
 *
 * @return {*}
 */
methods.navigation = function(){
	var animSpeed = 200,
		getHeight = function($elm, $top){
			var height = 0;
			// loop through all ul elements at the same level and calculate their height
			$elm.each(function(){
				height += $(this).outerHeight(true);
			});
			return height ? height + $top.outerHeight() : 'auto';
		};

	// loop through each element and add the navigation functionality
	// return 'this' to allow chain-ability
	return this.each(function(){
		var $nav = $(this),
			$top = $('<div class="top">' +
						'<span class="menuBtn">Menu</span>' +
					'</div>');

		// loop through all of the li elements and check if they have children
		$nav
			.addClass('dynamic')
			.wrapInner('<div class="inner">');

		// get the 'inner' element
		var $inner = $nav.children('.inner:first');

		// build the top bar and add it to the nav
		$top.append($inner.children('.title')).prependTo($nav);

		// loop through each li element
		$inner.find('li')
				.each(function(){
					var $item = $(this),					// the li element
						$children = $item.children('ul');	// any child ul elements
					if($children.length){
						// the item has sub-navigation
						$item.addClass('hasSub');	// apply hasSub class

						// add a back button to the sub-nav (used for small screens)
						$children.each(function(){
							var $child = $(this);
							if(!$child.children('.backBtn:first').length){
								$child.prepend('<li class="backBtn">' + ($nav.attr('data-text-back') || 'Back') + '</li>');
							}
						});
					}
				});

		/**
		 * Add click handler for showing sub navigation on small screens
		 */
		$inner.find('li.hasSub').on('click swipeleft', function(e){
			// get the screen size
			var viewport = $.viewport() || null;

			if(viewport && (viewport.width <= 767) && !$nav.data('animating')){
				// we're on a small screen

				// check the clicked element - ensure that it's not a child of hasSub
				var target = $(e.target);
				if(target.hasClass('hasSub') || ((target.prop('tagName').toUpperCase() != 'UL') && target.parent().hasClass('hasSub'))){
					// we're on an actual hasSub element

					var $parent = $(this),						// get the holder li element
						$subs = $parent.children('ul').show();	// get the sub nav and show it
					// ensure that we have a sub nav
					if($subs.length){
						$nav.data('animating', true);

						$inner.find('li.active').removeClass('active');
						$parent.addClass('active');

						// set the nav container height to that of the sub navs
						$nav.height(getHeight($subs, $top));

						// slide the sub nav into view
						var offset = (((parseFloat($inner.css('left')) / $nav.width()) * 100) - 100) + '%';
						$inner.stop(true, true).animate({left:offset}, animSpeed, function(){
							$nav.data('animating', false);
						});

						e.preventDefault();
					}
				}
			}
			e.stopPropagation();
		});

		/**
		 * Add click handler for slide back up the nav hierarchy, on small screens
		 */
		$inner.find('li.backBtn').on('click swiperight', function(e){
			// get the screen size
			var viewport = $.viewport() || null;

			if(viewport && (viewport.width <= 767) && !$nav.data('animating')){
				// we're on a small screen

				var $parent = $(this).parents('.hasSub:first');

				$nav.data('animating', true);

				$inner.find('li.active').removeClass('active');
				$parent.parents('li.hasSub').addClass('active');

				// set the nav container height to that of the parent nav's parent (so we show all of it's siblings too)
				$nav.height(getHeight($parent.parent('ul').parent().children('ul'), $top));

				// slide the nav back to show the parent
				//var offset = parseFloat($inner.css('left')) + parseFloat($nav.innerWidth());
				var offset = (((parseFloat($inner.css('left')) / $nav.width()) * 100) + 100);
				offset = (offset > 0) ? 0 : offset + '%';
				$inner.stop(true, true).animate({left:offset}, animSpeed, function(){
					// hide the children (this stops them overlapping
					$parent.children('ul').hide();

					$nav.data('animating', false);
				});

				e.preventDefault();
			}
			e.stopPropagation();
		});

		/**
		 * Click handler for the menu show/hide button
		 */
		$top.children('span.menuBtn').on('click', function(){
			// get the screen size
			var viewport = $.viewport() || null;

			if(viewport && (viewport.width <= 767)){
				// we're on a small screen
				if($nav.hasClass('active')){
					// nav is visible - hide it
					$nav.removeClass('active').height('auto');
					$inner.stop(true, true).slideUp(animSpeed);
				}else{
					// nav is hidden - show it
					$nav.addClass('active').height('auto');
					$inner.stop(true, true).css('left', 0).slideDown(animSpeed);
				}
			}
		});

		/**
		 * Ensure that the nav container is
		 * the correct height on small screens
		 */
		$(window).on('ready resize', function(){
			var viewport = $.viewport() || null;

			if(viewport && (viewport.width <= 767)){
				// we're on a small screen

				// if nav is not active, hide the inner container
				if($nav.hasClass('active')){
					$inner.show();

					// define a fixed height on the nav
					$nav.height(getHeight($inner.find('li.active:first').children('ul'), $top));
				}else{
					$inner.hide();
					console.log($top.outerHeight());
					$nav.height('auto');
				}
			}else{
				// we're not on a small screen - remove any style attributes
				$nav.removeAttr('style').removeClass('active');
				$inner
						.removeAttr('style')
						.find('ul')
							.removeAttr('style');
			}
		});
	});
};

// call the accordion functionality
$('.nav').bill('navigation');
	var alertQueue = [];

methods.alert = function(type, msg, val, callback){
	if(msg){
		callback = $.isFunction(callback) ? callback : ($.isFunction(val) ? val : null);
		val = !$.isFunction(val) ? val : null;

		if($('#alertPopup').length > 0){
			// alert dialogue already exists - add this to the queue
			alertQueue.push({
				type:type,
				msg:msg,
				val:val,
				callback:callback
			});

			return this;
		}

		var dialogueBox = $('<div id="alertPopup" class="alertBox float">' +										// the pop-up box
				'<div class="content"></div>' +
				'<div class="buttons"></div>' +
			'</div>'),
			overlay = ($('#alertOverlay').length > 0) ? $('#alertOverlay') : $('<div id="alertOverlay"></div>'),	// the overlay
			buttonBox = dialogueBox.children('.buttons'),															// the button container
			buttonHtml = '',																						// HTML markup for buttons
			content = '',																							// the pop-up content
			buttons = [],																							// the pop-up buttons
			animSpeed = 400;																						// the animation speed

		// check the pop-up type
		type = type.toLowerCase();
		switch(type){
			case 'confirm':
				// confirmation dialogue
				dialogueBox.addClass('confirmation');
				content = '<p>' + msg + '</p>';

				buttons = [
					{
						label:'cancel',
						value:false,
						'class':'cancel'
					},
					{
						label:'OK',
						value:true,
						'class':'confirm'
					}
				];
			break;
			case 'prompt':
				// prompt dialogue
				dialogueBox.addClass('prompt');
				content = '<p>' + msg + '</p>' +
						'<input type="text" name="value" value="' + (val || '') + '">';

				buttons = [
					{
						label:'cancel',
						value:null,
						'class':'cancel'
					},
					{
						label:'OK',
						value:true,
						'class':'confirm'
					}
				];
			break;
			default:
				// alert dialogue
				dialogueBox.addClass('alert');
				content = '<p>' + msg + '</p>';

				buttons = [
					{
						label:'OK',
						value:true,
						'class':'confirm'
					}
				];
			break;
		}

		// add the content to the pop-up
		dialogueBox.children('.content').html(content);

		// add any buttons to the pop-up
		$.each(buttons, function(){
			buttonHtml += '<button type="button" value="' + this.value + '" class="' + (this['class'] || '') + '">' + this.label + '</button>';
		});
		buttonBox.append(buttonHtml);

		// add the dialogue and set it's position
		dialogueBox
				.appendTo('body')					// add the dialogue box to the document body
				.css({margin:0, left:0, top:0})		// remove existing margin/positioning
				.css({								// add our own
					left:($(window).width()/2) - (dialogueBox.outerWidth()/2),
					top:($(window).height()/2) - (dialogueBox.outerHeight()/2)
				})
				.hide()
				.fadeIn(animSpeed);
		// add the overlay
		overlay.appendTo('body').stop(true, true).hide().fadeIn(animSpeed/2);

		/**
		 * re-position the dialogue when the screen size changes
		 */
		$(window).on('resize', function(){
			dialogueBox
					.css({margin:0, left:0, top:0})		// remove existing margin/positioning
					.css({								// add our own
						left:($(window).width()/2) - (dialogueBox.outerWidth()/2),
						top:($(window).height()/2) - (dialogueBox.outerHeight()/2)
					});
		});


		// add click events for the buttons
		buttonBox.children('button').on('click', function(){
			// hide the dialogue box and remove it
			dialogueBox.stop(true, true).fadeOut(animSpeed, function(){
				dialogueBox.remove();

				// check the alert queue for our next alert
				if(alertQueue.length > 0){
					// next alert specified - trigger it
					var alert = alertQueue.shift();
					$('body').bill('alert', alert.type, alert.msg, alert.val, alert.callback);
				}
			});
			// hide and remove the overlay
			overlay.fadeOut(animSpeed/2, function(){
				overlay.remove();
			});

			// fire the callback function
			if($.isFunction(callback)){
				var value = null;
				if(type == 'prompt'){
					// we're on a prompt dialogue - check for inputted value
					value = ($(this).val() != 'null') ? dialogueBox.find('> .content input[type=text][name=value]').val() || null : null;
				}else{
					// normal pop-up - get the button value
					value = $(this).val();
					value = (value == 'true') ? true : ((value == 'false') ? false : ((value == 'null') ? null : value));
				}

				callback.apply(window, [value]);
			}
		});
	}else if($.isFunction(callback)){
		// no message defined, but we have a callback
		// trigger the callback function, with a return value of null
		callback.apply(window, [null]);
	}

	// return 'this' to allow chain-ability
	return this;
};


/**
 * Overwrites alert functionality
 */
/*window.alert = function(msg, callback){
	return $('body').bill('alert', 'alert', msg, null, callback);
};*/

/**
 * Overwrites confirm functionality
 */
/*window.confirm = function(msg, callback){
	return $('body').bill('alert', 'confirm', msg, null, callback);
};*/

/**
 * Overwrites prompt functionality
 */
/*window.prompt = function(msg, val, callback){
	return $('body').bill('alert', 'prompt', msg, val, null, callback);
};*/
	/**
 * Adds accordion functionality
 *
 * @return {*}
 */
methods.accordion = function(userOptions){
	var defaultOptions = {
		animSpeed:200,
		animType:'slide',
		collapsible:false,
		accordion:true
	};
	var options = $.extend(defaultOptions, userOptions);

	// loop through each element and add the accordion functionality
	// return 'this' to allow chain-ability
	return this.each(function(){
		var accordion = $(this),			// the accordion element
			data = accordion.data('bill');	// the accordion data

		// only add the accordion if it hasn't already been initiated on the object
		if(!data || !data.accordion){
			// get the accordion element type
			var type = accordion.prop('tagName').toUpperCase(),
				titles = null,
				panes = null;

			if(type == 'DL'){
				// for dl elements we look for `> dt` (for titles) and `> dd` (for panes)
				// we ignore `.title` and `.pane` classes, as dl elements already define their own title and data
				titles = accordion.children('dt');

				if(titles.length == 0){
					// no titles found - end the element loop
					$.error('No title elements found on bill.accordion object');
					return this;
				}

				// find the panes
				// loop through each title and find the next sibling
				// this will stop it from matching too many objects, as panes
				titles.each(function(){
					// add the pane to the list
					var pane = $(this).next('dd').addClass('pane');
					panes = (panes == null) ? pane : panes.add(pane);
				});
			}else{
				var queryPrefixTitle = '',
					queryPrefixPane = '';
				if((type == 'UL') || (type == 'OL')){
					// for ul/ol elements, we look for `> li > .title/.pane` elements
					// add a title prefix to match within the direct li child
					queryPrefixTitle = 'li > ';
				}

				// we look for `> .title/.pane`
				// if none found, look for `> h{1-6}` (for titles) and direct sibling (for panes)
				titles = accordion.find('> ' + queryPrefixTitle + '.title');
				if(titles.length == 0){
					// no titles found - check for h{1-6} elements

					// loop through until we find a heading tag - this gives us the highest number headers
					for(var i = 1; i <= 6; i++){
						titles = accordion.find('> ' + queryPrefixTitle + 'h' + i);
						if(titles.length > 0){
							// heading found - end the loop
							i = 7;
						}
					}

					if(titles.length == 0){
						// still no titles found - end the element loop
						$.error('No title elements found on bill.accordion object');
						return this;
					}
				}


				// find the panes
				// loop through each title
				titles.each(function(){
					// add the pane to the list
					// for the pane, we only match the element if it:
					// Has a class of `pane` or is a specific element type
					// and doesn't have a class of title
					var pane = $(this)
									.next(
											queryPrefixPane + '.pane, ' +
											queryPrefixPane + 'div:not(.title), ' +
											queryPrefixPane + 'article:not(.title), ' +
											queryPrefixPane + 'section:not(.title), ' +
											queryPrefixPane + 'aside:not(.title)'
									)
									.addClass('pane');
					panes = (panes == null) ? pane : panes.add(pane);
				});
			}

			// set the accordion data
			accordion.data('bill', $.extend(data || {}, {accordion:options}));

			// hide all of the panes
			panes.hide();

			/**
			 * Adds the click handler for title elements
			 */
			titles
					.addClass('title')			// ensure that the titles have the `title` class
					.on('click', function(e){	// add the click event for displaying panes
						// stop the default click event
						e.preventDefault();

						var title = $(this),						// the title element
							pane = panes.eq(titles.index(title));	// the corresponding pane element

						// stop any active animation
						panes.stop(true, true);

						if(title.hasClass('active')){
							// panel is already active - collapse, if we are allowed
							if(options.collapsible){
								// remove the active class from the title
								title.removeClass('active');

								if(options.animType){
									// animate
									switch(options.animType){
										case 'fade':
											pane.fadeOut(options.animSpeed);
										break;
										default:
											pane.slideUp(options.animSpeed);
										break;
									}
								}else{
									// no animation - just hide
									pane.hide();
								}
							}
						}else{
							// panel not active
							if(options.accordion){
								// this is a true accordion - remove active class on all titles
								titles.removeClass('active');
							}
							// add the active class to the current title
							title.addClass('active');

							if(options.animType){
								switch(options.animType){
									// animate
									case 'fade':
										if(options.accordion){
											// true accordion - hide the other panes
											// we don't fade them out, otherwise it conflicts with
											// the position of the active pane
											panes.hide();
										}
										pane.fadeIn(options.animSpeed);
									break;
									default:
										if(options.accordion){
											// true accordion - hide the other panes
											panes.not(pane).slideUp(options.animSpeed);
										}
										pane.slideDown(options.animSpeed);
									break;
								}
							}else{
								// no animation - just show
								panes.hide();
								pane.show();
							}
						}
					});

			// if accordion is not collapsible, we must always have one pane open
			// trigger the click event on the first element
			if(!options.collapsible){
				var animType = options.animType,					// the current animation type
					activeTitle = titles.filter('.active:first');	// check for a button with class 'active'
				// if no tab buttons have a class of active, just go with the first tab
				activeTitle = !activeTitle.length ? titles.first() : activeTitle;

				// set no anim type, so that the tab appears immediately
				options.animType = null;

				// trigger the click event
				activeTitle.triggerHandler('click');

				// reset the animation type
				options.animType = animType;
			}
		}else if(userOptions){
			// accordion already exists, but options have been updated
			accordion.data('bill', $.extend(data || {}, {accordion:options}));
		}
	});
};

// call the accordion functionality
$('.accordion').bill('accordion');
	/**
 * Adds accordion functionality
 *
 * @return {*}
 */
methods.tabs = function(userOptions){
	var defaultOptions = {
		animSpeed:200
	};
	var options = $.extend(defaultOptions, userOptions);

	// loop through each element and add the tab functionality
	// return 'this' to allow chain-ability
	return this.each(function(){
		var tabs = $(this),				// the tab element
			data = tabs.data('bill');	// the tab data

		// only add the accordion if it hasn't already been initiated on the object
		if(!data || !data.tabs){
			// get the tab elements
			var tabBtns = null,	// the tab buttons
				panes = null;	// the tab panes

			if(tabs.get(0).nodeName == 'DL'){
				// the tab element is a definition list
				panes = tabs.children('dd');
				tabBtns = tabs.children('dt');

				// loop through and ensure that all of them contain links
				tabBtns.each(function(){
					var btn = $(this);
					if(btn.children('a:first').length == 0){
						// dd contains no link
						var pane = btn.next('dd:first'),																		// the tab pane
							id = pane.prop('id') || 'tab-' + (new Date().getTime()) + '-' + Math.floor(Math.random()*10000);	// the pane ID
						// wrap the dt contents in the link (wrapinner doesn't always work here)
						btn.html('<a href="#' + id + '">' + btn.text() + '</a>');
						// assign the ID to the pane
						pane.prop('id', id);
					}
				});

				tabs.prepend(tabBtns);
			}else{
				tabBtns = tabs.children(':first');
				var firstType = tabBtns.get(0).nodeName;

				if(firstType == 'UL'){
					// first element is a list - we assume it's a list of tab links
					// get a list of the panes
					panes = tabs.children().not(tabBtns);
					tabBtns = tabBtns.children('li');
				}else{
					// first element isn't a list - assume that tab titles will come from within the content
					var tabHtml = '<ul>';

					// loop through each tabs child and get their headers
					tabs.children().each(function(i){
						// find the first heading element
						var pane = $(this),																						// the tab pane
								id = pane.prop('id') || 'tab-' + (new Date().getTime()) + '-' + Math.floor(Math.random()*10000),	// the pane ID
								header = $(this).children('h1,h2,h3,h4,h5,h6').first(),												// the header element
								label = (header.length > 0) ? header.text() : pane.attr('data-label') || 'Tab ' + (i+1);

						// ensure that the pane has an ID
						pane.prop('id', id);
						panes = (panes == null) ? pane : panes.add(pane);

						// define the tab text - if no header is found, use a placeholder
						tabHtml += '<li>' +
								'<a href="#' + id + '">' + label + '</a>' +
								'</li>';
					});

					tabHtml += '</ul>';
					tabBtns = $(tabHtml).prependTo(tabs).children('li');
				}
			}


			if(tabBtns && (tabBtns.length > 0)){
				// tab buttons exist

				// add a class of 'pane' to all of the panes
				panes.addClass('pane');
				tabBtns.addClass('tab');

				// get the link elements
				tabBtns = tabBtns.find('a');


				// add the click handler, to show panes
				tabBtns.on('click', function(e){
					var tab = $(this),							// the tab element
						pane = panes.filter(tab.attr('href'));	// the corresponding pane element

					// stop any active animation
					panes.stop(true, true);

					// remove active class on all tabs
					tabBtns.removeClass('active');
					// add the active class to the current title
					tab.addClass('active');

					if(options.animType){
						switch(options.animType){
							// animate
							case 'slide':
								panes.not(pane).slideUp(options.animSpeed);
								pane.slideDown(options.animSpeed);
							break;
							default:
								panes.hide();
								pane.fadeIn(options.animSpeed);
							break;
						}
					}else{
						// no animation - just show
						panes.hide();
						pane.show();
					}

					// stop the default click event
					e.preventDefault();
				});


				// show an active tab
				var animType = options.animType,	// the current animation type
					// check for an active button
					// if a hash has been defined, check for a button matching it,
					// otherwise look for a button with class 'active'
					activeBtn = location.hash ?
								$(tabBtns.filter('[href="' + location.hash + '"]:first')[0] || tabBtns.filter('.active:first')[0])
								:
								tabBtns.filter('.active:first');
				// if no tab buttons have a class of active, just go with the first tab
				activeBtn = (activeBtn.length == 0) ? tabBtns.first() : activeBtn;

				// set no anim type, so that the tab appears immediately
				options.animType = null;

				// trigger the click event
				activeBtn.triggerHandler('click');

				// reset the animation type
				options.animType = animType;
			}
		}else if(userOptions){
			// accordion already exists, but options have been updated
			tabs.data('bill', $.extend(data || {}, {tabs:options}));
		}
	});
};

// call the accordion functionality
$('.tabs').bill('tabs');
	/**
 * Copyright GreenImp Web - greenimp.co.uk
 *
 * Author: GreenImp Web
 * Date Created: 24/02/13 01:24
 */


/*
 * FancyBox - jQuery Plugin
 * Simple and fancy lightbox alternative
 *
 * Examples and documentation at: http://fancybox.net
 *
 * Copyright (c) 2008 - 2010 Janis Skarnelis
 * That said, it is hardly a one-person project. Many people have submitted bugs, code, and offered their advice freely. Their support is greatly appreciated.
 *
 * Version: 1.3.4 (11/11/2010)
 * Requires: jQuery v1.3+
 *
 * Dual licensed under the MIT and GPL licenses:
 *   http://www.opensource.org/licenses/mit-license.php
 *   http://www.gnu.org/licenses/gpl.html
 */

;(function($) {
	var tmp, loading, overlay, wrap, outer, content, close, title, nav_left, nav_right,

		selectedIndex = 0, selectedOpts = {}, selectedArray = [], currentIndex = 0, currentOpts = {}, currentArray = [],

		ajaxLoader = null, imgPreloader = new Image(), imgRegExp = /\.(jpg|gif|png|bmp|jpeg)(.*)?$/i, swfRegExp = /[^\.]\.(swf)\s*$/i,

		loadingTimer, loadingFrame = 1,

		titleHeight = 0, titleStr = '', start_pos, final_pos, busy = false, fx = $.extend($('<div/>')[0], { prop: 0 }),

		//isIE6 = $.browser.msie && $.browser.version < 7 && !window.XMLHttpRequest,
		isIE6 = navigator.userAgent.match(/msie/i) && navigator.userAgent.match(/6/) && !window.XMLHttpRequest,

		/*
		 * Private methods 
		 */

		_abort = function() {
			loading.hide();

			imgPreloader.onerror = imgPreloader.onload = null;

			if (ajaxLoader) {
				ajaxLoader.abort();
			}

			tmp.empty();
		},

		_error = function() {
			if (false === selectedOpts.onError(selectedArray, selectedIndex, selectedOpts)) {
				loading.hide();
				busy = false;
				return;
			}

			selectedOpts.titleShow = false;

			selectedOpts.width = 'auto';
			selectedOpts.height = 'auto';

			tmp.html( '<p id="fancybox-error">The requested content cannot be loaded.<br />Please try again later.</p>' );

			_process_inline();
		},

		_start = function() {
			var obj = selectedArray[ selectedIndex ],
				href, 
				type, 
				title,
				str,
				emb,
				ret;

			_abort();

			selectedOpts = $.extend({}, $.fn.fancybox.defaults, (typeof $(obj).data('fancybox') == 'undefined' ? selectedOpts : $(obj).data('fancybox')));

			ret = selectedOpts.onStart(selectedArray, selectedIndex, selectedOpts);

			if (ret === false) {
				busy = false;
				return;
			} else if (typeof ret == 'object') {
				selectedOpts = $.extend(selectedOpts, ret);
			}

			title = selectedOpts.title || (obj.nodeName ? $(obj).attr('title') : obj.title) || '';

			if (obj.nodeName && !selectedOpts.orig) {
				selectedOpts.orig = $(obj).children("img:first").length ? $(obj).children("img:first") : $(obj);
			}

			if (title === '' && selectedOpts.orig && selectedOpts.titleFromAlt) {
				title = selectedOpts.orig.attr('alt');
			}

			href = selectedOpts.href || (obj.nodeName ? $(obj).attr('href') : obj.href) || null;

			if ((/^(?:javascript)/i).test(href) || href == '#') {
				href = null;
			}

			if (selectedOpts.type) {
				type = selectedOpts.type;

				if (!href) {
					href = selectedOpts.content;
				}

			} else if (selectedOpts.content) {
				type = 'html';

			} else if (href) {
				if (href.match(imgRegExp)) {
					type = 'image';

				} else if (href.match(swfRegExp)) {
					type = 'swf';

				} else if ($(obj).hasClass("iframe")) {
					type = 'iframe';

				} else if (href.indexOf("#") === 0) {
					type = 'inline';

				} else {
					type = 'ajax';
				}
			}

			if (!type) {
				_error();
				return;
			}

			if (type == 'inline') {
				obj	= href.substr(href.indexOf("#"));
				type = $(obj).length > 0 ? 'inline' : 'ajax';
			}

			selectedOpts.type = type;
			selectedOpts.href = href;
			selectedOpts.title = title;

			if (selectedOpts.autoDimensions) {
				if (selectedOpts.type == 'html' || selectedOpts.type == 'inline' || selectedOpts.type == 'ajax') {
					selectedOpts.width = 'auto';
					selectedOpts.height = 'auto';
				} else {
					selectedOpts.autoDimensions = false;	
				}
			}

			if (selectedOpts.modal) {
				selectedOpts.overlayShow = true;
				selectedOpts.hideOnOverlayClick = false;
				selectedOpts.hideOnContentClick = false;
				selectedOpts.enableEscapeButton = false;
				selectedOpts.showCloseButton = false;
			}

			selectedOpts.padding = parseInt(selectedOpts.padding, 10);
			selectedOpts.margin = parseInt(selectedOpts.margin, 10);

			tmp.css('padding', (selectedOpts.padding + selectedOpts.margin));

			$('.fancybox-inline-tmp').unbind('fancybox-cancel').bind('fancybox-change', function() {
				$(this).replaceWith(content.children('div').children());
			});

			switch (type) {
				case 'html' :
					tmp.html( selectedOpts.content );
					_process_inline();
				break;

				case 'inline' :
					if ( $(obj).parent().is('#fancybox-content') === true) {
						busy = false;
						return;
					}

					$('<div class="fancybox-inline-tmp" />')
						.hide()
						.insertBefore( $(obj) )
						.bind('fancybox-cleanup', function() {
							$(this).replaceWith(content.children('div').children());
						}).bind('fancybox-cancel', function() {
							$(this).replaceWith(tmp.children('div').children());
						});

					$(obj).appendTo(tmp);

					_process_inline();
				break;

				case 'image':
					busy = false;

					$.fancybox.showActivity();

					imgPreloader = new Image();

					imgPreloader.onerror = function() {
						_error();
					};

					imgPreloader.onload = function() {
						busy = true;

						imgPreloader.onerror = imgPreloader.onload = null;

						_process_image();
					};

					imgPreloader.src = href;
				break;

				case 'swf':
					selectedOpts.scrolling = 'no';

					str = '<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" width="' + selectedOpts.width + '" height="' + selectedOpts.height + '"><param name="movie" value="' + href + '"></param>';
					emb = '';

					$.each(selectedOpts.swf, function(name, val) {
						str += '<param name="' + name + '" value="' + val + '"></param>';
						emb += ' ' + name + '="' + val + '"';
					});

					str += '<embed src="' + href + '" type="application/x-shockwave-flash" width="' + selectedOpts.width + '" height="' + selectedOpts.height + '"' + emb + '></embed></object>';

					tmp.html(str);

					_process_inline();
				break;

				case 'ajax':
					busy = false;

					$.fancybox.showActivity();

					selectedOpts.ajax.win = selectedOpts.ajax.success;

					ajaxLoader = $.ajax($.extend({}, selectedOpts.ajax, {
						url	: href,
						data : selectedOpts.ajax.data || {},
						error : function(XMLHttpRequest, textStatus, errorThrown) {
							if ( XMLHttpRequest.status > 0 ) {
								_error();
							}
						},
						success : function(data, textStatus, XMLHttpRequest) {
							var o = typeof XMLHttpRequest == 'object' ? XMLHttpRequest : ajaxLoader;
							if (o.status == 200) {
								if ( typeof selectedOpts.ajax.win == 'function' ) {
									ret = selectedOpts.ajax.win(href, data, textStatus, XMLHttpRequest);

									if (ret === false) {
										loading.hide();
										return;
									} else if (typeof ret == 'string' || typeof ret == 'object') {
										data = ret;
									}
								}

								tmp.html( data );
								_process_inline();
							}
						}
					}));

				break;

				case 'iframe':
					_show();
				break;
			}
		},

		_process_inline = function() {
			var
				w = selectedOpts.width,
				h = selectedOpts.height;

			if (w.toString().indexOf('%') > -1) {
				w = parseInt( ($(window).width() - (selectedOpts.margin * 2)) * parseFloat(w) / 100, 10) + 'px';

			} else {
				w = w == 'auto' ? 'auto' : w + 'px';	
			}

			if (h.toString().indexOf('%') > -1) {
				h = parseInt( ($(window).height() - (selectedOpts.margin * 2)) * parseFloat(h) / 100, 10) + 'px';

			} else {
				h = h == 'auto' ? 'auto' : h + 'px';	
			}

			tmp.wrapInner('<div style="width:' + w + ';height:' + h + ';overflow: ' + (selectedOpts.scrolling == 'auto' ? 'auto' : (selectedOpts.scrolling == 'yes' ? 'scroll' : 'hidden')) + ';position:relative;"></div>');

			selectedOpts.width = tmp.width();
			selectedOpts.height = tmp.height();

			_show();
		},

		_process_image = function() {
			selectedOpts.width = imgPreloader.width;
			selectedOpts.height = imgPreloader.height;

			$("<img />").attr({
				'id' : 'fancybox-img',
				'src' : imgPreloader.src,
				'alt' : selectedOpts.title
			}).appendTo( tmp );

			_show();
		},

		_show = function() {
			var pos, equal;

			loading.hide();

			if (wrap.is(":visible") && false === currentOpts.onCleanup(currentArray, currentIndex, currentOpts)) {
				//$.event.trigger('fancybox-cancel');
				$('.fancybox-inline-tmp').trigger('fancybox-cancel');

				busy = false;
				return;
			}

			busy = true;

			$(content.add( overlay )).unbind();

			$(window).unbind("resize.fb scroll.fb");
			$(document).unbind('keydown.fb');

			if (wrap.is(":visible") && currentOpts.titlePosition !== 'outside') {
				wrap.css('height', wrap.height());
			}

			currentArray = selectedArray;
			currentIndex = selectedIndex;
			currentOpts = selectedOpts;

			if (currentOpts.overlayShow) {
				overlay.css({
					'background-color' : currentOpts.overlayColor,
					'opacity' : currentOpts.overlayOpacity,
					'cursor' : currentOpts.hideOnOverlayClick ? 'pointer' : 'auto',
					'height' : $(document).height()
				});

				if (!overlay.is(':visible')) {
					if (isIE6) {
						$('select:not(#fancybox-tmp select)').filter(function() {
							return this.style.visibility !== 'hidden';
						}).css({'visibility' : 'hidden'}).one('fancybox-cleanup', function() {
							this.style.visibility = 'inherit';
						});
					}

					overlay.show();
				}
			} else {
				overlay.hide();
			}

			final_pos = _get_zoom_to();

			_process_title();

			if (wrap.is(":visible")) {
				$( close.add( nav_left ).add( nav_right ) ).hide();

				pos = wrap.position();

				start_pos = {
					top	 : pos.top,
					left : pos.left,
					width : wrap.width(),
					height : wrap.height()
				};

				equal = (start_pos.width == final_pos.width && start_pos.height == final_pos.height);

				content.fadeTo(currentOpts.changeFade, 0.3, function() {
					var finish_resizing = function() {
						content.html( tmp.contents() ).fadeTo(currentOpts.changeFade, 1, _finish);
					};

					//$.event.trigger('fancybox-change');
					$('.fancybox-inline-tmp').trigger('fancybox-change');

					content
						.empty()
						.removeAttr('filter')
						.css({
							'border-width' : currentOpts.padding,
							'width'	: final_pos.width - currentOpts.padding * 2,
							'height' : selectedOpts.autoDimensions ? 'auto' : final_pos.height - titleHeight - currentOpts.padding * 2
						});

					if (equal) {
						finish_resizing();

					} else {
						fx.prop = 0;

						$(fx).animate({prop: 1}, {
							 duration : currentOpts.changeSpeed,
							 easing : currentOpts.easingChange,
							 step : _draw,
							 complete : finish_resizing
						});
					}
				});

				return;
			}

			wrap.removeAttr("style");

			content.css('border-width', currentOpts.padding);

			if (currentOpts.transitionIn == 'elastic') {
				start_pos = _get_zoom_from();

				content.html( tmp.contents() );

				wrap.show();

				if (currentOpts.opacity) {
					final_pos.opacity = 0;
				}

				fx.prop = 0;

				$(fx).animate({prop: 1}, {
					 duration : currentOpts.speedIn,
					 easing : currentOpts.easingIn,
					 step : _draw,
					 complete : _finish
				});

				return;
			}

			if (currentOpts.titlePosition == 'inside' && titleHeight > 0) {	
				title.show();	
			}

			content
				.css({
					'width' : final_pos.width - currentOpts.padding * 2,
					'height' : selectedOpts.autoDimensions ? 'auto' : final_pos.height - titleHeight - currentOpts.padding * 2
				})
				.html( tmp.contents() );

			wrap
				.css(final_pos)
				.fadeIn( currentOpts.transitionIn == 'none' ? 0 : currentOpts.speedIn, _finish );
		},

		_format_title = function(title) {
			if (title && title.length) {
				/*if (currentOpts.titlePosition == 'float') {
					return '<table id="fancybox-title-float-wrap" cellpadding="0" cellspacing="0"><tr><td id="fancybox-title-float-left"></td><td id="fancybox-title-float-main">' + title + '</td><td id="fancybox-title-float-right"></td></tr></table>';
				}*/

				return '<div id="fancybox-title-' + currentOpts.titlePosition + '">' + title + '</div>';
			}

			return false;
		},

		_process_title = function() {
			titleStr = currentOpts.title || '';
			titleHeight = 0;

			title
				.empty()
				.removeAttr('style')
				.removeClass();

			if (currentOpts.titleShow === false) {
				title.hide();
				return;
			}

			titleStr = $.isFunction(currentOpts.titleFormat) ? currentOpts.titleFormat(titleStr, currentArray, currentIndex, currentOpts) : _format_title(titleStr);

			if (!titleStr || titleStr === '') {
				title.hide();
				return;
			}

			title
				.addClass('fancybox-title-' + currentOpts.titlePosition)
				.html( titleStr )
				.appendTo( 'body' )
				.show();

			switch (currentOpts.titlePosition) {
				case 'inside':
					title
						.css({
							'width' : final_pos.width - (currentOpts.padding * 2),
							'marginLeft' : currentOpts.padding,
							'marginRight' : currentOpts.padding
						});

					titleHeight = title.outerHeight(true);

					title.appendTo( outer );

					final_pos.height += titleHeight;
				break;

				case 'over':
					title
						.css({
							'marginLeft' : currentOpts.padding,
							'width'	: final_pos.width - (currentOpts.padding * 2),
							'bottom' : currentOpts.padding
						})
						.appendTo( outer );
				break;

				case 'float':
					title
						.css('left', parseInt((title.width() - final_pos.width - 40)/ 2, 10) * -1)
						.appendTo( wrap );
				break;

				default:
					title
						.css({
							'width' : final_pos.width - (currentOpts.padding * 2),
							'paddingLeft' : currentOpts.padding,
							'paddingRight' : currentOpts.padding
						})
						.appendTo( wrap );
				break;
			}

			title.hide();
		},

		_set_navigation = function() {
			if (currentOpts.enableEscapeButton || currentOpts.enableKeyboardNav) {
				$(document).bind('keydown.fb', function(e) {
					if (e.keyCode == 27 && currentOpts.enableEscapeButton) {
						e.preventDefault();
						$.fancybox.close();

					} else if ((e.keyCode == 37 || e.keyCode == 39) && currentOpts.enableKeyboardNav && e.target.tagName !== 'INPUT' && e.target.tagName !== 'TEXTAREA' && e.target.tagName !== 'SELECT') {
						e.preventDefault();
						$.fancybox[ e.keyCode == 37 ? 'prev' : 'next']();
					}
				});
			}

			if (!currentOpts.showNavArrows) {
				nav_left.hide();
				nav_right.hide();
				return;
			}

			if ((currentOpts.cyclic && currentArray.length > 1) || currentIndex !== 0) {
				nav_left.show();
			}

			if ((currentOpts.cyclic && currentArray.length > 1) || currentIndex != (currentArray.length -1)) {
				nav_right.show();
			}
		},

		_finish = function () {
			if (!$.support.opacity) {
				content.get(0).style.removeAttribute('filter');
				wrap.get(0).style.removeAttribute('filter');
			}

			if (selectedOpts.autoDimensions) {
				content.css('height', 'auto');
			}

			wrap.css('height', 'auto');

			if (titleStr && titleStr.length) {
				title.show();
			}

			if (currentOpts.showCloseButton) {
				close.show();
			}

			_set_navigation();

			if (currentOpts.hideOnContentClick)	{
				content.bind('click', $.fancybox.close);
			}

			if (currentOpts.hideOnOverlayClick)	{
				overlay.bind('click', $.fancybox.close);
			}

			$(window).bind("resize.fb", $.fancybox.resize);

			if (currentOpts.centerOnScroll) {
				$(window).bind("scroll.fb", $.fancybox.center);
			}

			if (currentOpts.type == 'iframe') {
				//$('<iframe id="fancybox-frame" name="fancybox-frame' + new Date().getTime() + '" frameborder="0" hspace="0" ' + ($.browser.msie ? 'allowtransparency="true""' : '') + ' scrolling="' + selectedOpts.scrolling + '" src="' + currentOpts.href + '"></iframe>').appendTo(content);
				$('<iframe id="fancybox-frame" name="fancybox-frame' + new Date().getTime() + '" frameborder="0" hspace="0" ' + (navigator.userAgent.match(/msie/i) ? 'allowtransparency="true""' : '') + ' scrolling="' + selectedOpts.scrolling + '" src="' + currentOpts.href + '"></iframe>').appendTo(content);
			}

			wrap.show();

			busy = false;

			$.fancybox.center();

			currentOpts.onComplete(currentArray, currentIndex, currentOpts);

			_preload_images();
		},

		_preload_images = function() {
			var href,
				objNext;

			if ((currentArray.length -1) > currentIndex) {
				href = currentArray[ currentIndex + 1 ].href;

				if (typeof href !== 'undefined' && href.match(imgRegExp)) {
					objNext = new Image();
					objNext.src = href;
				}
			}

			if (currentIndex > 0) {
				href = currentArray[ currentIndex - 1 ].href;

				if (typeof href !== 'undefined' && href.match(imgRegExp)) {
					objNext = new Image();
					objNext.src = href;
				}
			}
		},

		_draw = function(pos) {
			var dim = {
				width : parseInt(start_pos.width + (final_pos.width - start_pos.width) * pos, 10),
				height : parseInt(start_pos.height + (final_pos.height - start_pos.height) * pos, 10),

				top : parseInt(start_pos.top + (final_pos.top - start_pos.top) * pos, 10),
				left : parseInt(start_pos.left + (final_pos.left - start_pos.left) * pos, 10)
			};

			if (typeof final_pos.opacity !== 'undefined') {
				dim.opacity = pos < 0.5 ? 0.5 : pos;
			}

			wrap.css(dim);

			content.css({
				'width' : dim.width - currentOpts.padding * 2,
				'height' : dim.height - (titleHeight * pos) - currentOpts.padding * 2
			});
		},

		_get_viewport = function() {
			return [
				$(window).width() - (currentOpts.margin * 2),
				$(window).height() - (currentOpts.margin * 2),
				$(document).scrollLeft() + currentOpts.margin,
				$(document).scrollTop() + currentOpts.margin
			];
		},

		_get_zoom_to = function () {
			var view = _get_viewport(),
				to = {},
				resize = currentOpts.autoScale,
				double_padding = currentOpts.padding * 2,
				ratio;

			if (currentOpts.width.toString().indexOf('%') > -1) {
				to.width = parseInt((view[0] * parseFloat(currentOpts.width)) / 100, 10);
			} else {
				to.width = currentOpts.width + double_padding;
			}

			if (currentOpts.height.toString().indexOf('%') > -1) {
				to.height = parseInt((view[1] * parseFloat(currentOpts.height)) / 100, 10);
			} else {
				to.height = currentOpts.height + double_padding;
			}

			if (resize && (to.width > view[0] || to.height > view[1])) {
				if (selectedOpts.type == 'image' || selectedOpts.type == 'swf') {
					ratio = (currentOpts.width ) / (currentOpts.height );

					if ((to.width ) > view[0]) {
						to.width = view[0];
						to.height = parseInt(((to.width - double_padding) / ratio) + double_padding, 10);
					}

					if ((to.height) > view[1]) {
						to.height = view[1];
						to.width = parseInt(((to.height - double_padding) * ratio) + double_padding, 10);
					}

				} else {
					to.width = Math.min(to.width, view[0]);
					to.height = Math.min(to.height, view[1]);
				}
			}

			to.top = parseInt(Math.max(view[3] - 20, view[3] + ((view[1] - to.height - 40) * 0.5)), 10);
			to.left = parseInt(Math.max(view[2] - 20, view[2] + ((view[0] - to.width - 40) * 0.5)), 10);

			return to;
		},

		_get_obj_pos = function(obj) {
			var pos = obj.offset();

			pos.top += parseInt( obj.css('paddingTop'), 10 ) || 0;
			pos.left += parseInt( obj.css('paddingLeft'), 10 ) || 0;

			pos.top += parseInt( obj.css('border-top-width'), 10 ) || 0;
			pos.left += parseInt( obj.css('border-left-width'), 10 ) || 0;

			pos.width = obj.width();
			pos.height = obj.height();

			return pos;
		},

		_get_zoom_from = function() {
			var orig = selectedOpts.orig ? $(selectedOpts.orig) : false,
				from = {},
				pos,
				view;

			if (orig && orig.length) {
				pos = _get_obj_pos(orig);

				from = {
					width : pos.width + (currentOpts.padding * 2),
					height : pos.height + (currentOpts.padding * 2),
					top	: pos.top - currentOpts.padding - 20,
					left : pos.left - currentOpts.padding - 20
				};

			} else {
				view = _get_viewport();

				from = {
					width : currentOpts.padding * 2,
					height : currentOpts.padding * 2,
					top	: parseInt(view[3] + view[1] * 0.5, 10),
					left : parseInt(view[2] + view[0] * 0.5, 10)
				};
			}

			return from;
		},

		_animate_loading = function() {
			if (!loading.is(':visible')){
				clearInterval(loadingTimer);
				return;
			}

			$('div', loading).css('top', (loadingFrame * -40) + 'px');

			loadingFrame = (loadingFrame + 1) % 12;
		};

	/*
	 * Public methods
	 */

	$.fn.fancybox = function(options) {
		if (!$(this).length) {
			return this;
		}

		$(this)
			.data('fancybox', $.extend({}, options, ($.metadata ? $(this).metadata() : {})))
			.unbind('click.fb')
			.bind('click.fb', function(e) {
				e.preventDefault();

				if (busy) {
					return;
				}

				busy = true;

				$(this).blur();

				selectedArray = [];
				selectedIndex = 0;

				var rel = $(this).attr('rel') || '';

				if (!rel || rel == '' || rel === 'nofollow') {
					selectedArray.push(this);

				} else {
					//selectedArray = $("a[rel=" + rel + "], area[rel=" + rel + "]");
					selectedArray = $("a[rel=" + rel + "], area[rel=" + rel + "], img[rel=" + rel + "]");
					selectedIndex = selectedArray.index( this );
				}

				_start();

				return;
			});

		return this;
	};

	$.fancybox = function(obj) {
		var opts;

		if (busy) {
			return;
		}

		busy = true;
		opts = typeof arguments[1] !== 'undefined' ? arguments[1] : {};

		selectedArray = [];
		selectedIndex = parseInt(opts.index, 10) || 0;

		if ($.isArray(obj)) {
			for (var i = 0, j = obj.length; i < j; i++) {
				if (typeof obj[i] == 'object') {
					$(obj[i]).data('fancybox', $.extend({}, opts, obj[i]));
				} else {
					obj[i] = $({}).data('fancybox', $.extend({content : obj[i]}, opts));
				}
			}

			selectedArray = jQuery.merge(selectedArray, obj);

		} else {
			if (typeof obj == 'object') {
				$(obj).data('fancybox', $.extend({}, opts, obj));
			} else {
				obj = $({}).data('fancybox', $.extend({content : obj}, opts));
			}

			selectedArray.push(obj);
		}

		if (selectedIndex > selectedArray.length || selectedIndex < 0) {
			selectedIndex = 0;
		}

		_start();
	};

	$.fancybox.showActivity = function() {
		clearInterval(loadingTimer);

		loading.show();
		loadingTimer = setInterval(_animate_loading, 66);
	};

	$.fancybox.hideActivity = function() {
		loading.hide();
	};

	$.fancybox.next = function() {
		return $.fancybox.pos( currentIndex + 1);
	};

	$.fancybox.prev = function() {
		return $.fancybox.pos( currentIndex - 1);
	};

	$.fancybox.pos = function(pos) {
		if (busy) {
			return;
		}

		pos = parseInt(pos);

		selectedArray = currentArray;

		if (pos > -1 && pos < currentArray.length) {
			selectedIndex = pos;
			_start();

		} else if (currentOpts.cyclic && currentArray.length > 1) {
			selectedIndex = pos >= currentArray.length ? 0 : currentArray.length - 1;
			_start();
		}

		return;
	};

	$.fancybox.cancel = function() {
		if (busy) {
			return;
		}

		busy = true;

		//$.event.trigger('fancybox-cancel');
		$('.fancybox-inline-tmp').trigger('fancybox-cancel');

		_abort();

		selectedOpts.onCancel(selectedArray, selectedIndex, selectedOpts);

		busy = false;
	};

	// Note: within an iframe use - parent.$.fancybox.close();
	$.fancybox.close = function() {
		if (busy || wrap.is(':hidden')) {
			return;
		}

		busy = true;

		if (currentOpts && false === currentOpts.onCleanup(currentArray, currentIndex, currentOpts)) {
			busy = false;
			return;
		}

		_abort();

		$(close.add( nav_left ).add( nav_right )).hide();

		$(content.add( overlay )).unbind();

		$(window).unbind("resize.fb scroll.fb");
		$(document).unbind('keydown.fb');

		content.find('iframe').attr('src', isIE6 && /^https/i.test(window.location.href || '') ? 'javascript:void(false)' : 'about:blank');

		if (currentOpts.titlePosition !== 'inside') {
			title.empty();
		}

		wrap.stop();

		function _cleanup() {
			overlay.fadeOut('fast');

			title.empty().hide();
			wrap.hide();

			//$.event.trigger('fancybox-cleanup');
			$('.fancybox-inline-tmp').trigger('fancybox-cleanup');

			content.empty();

			currentOpts.onClosed(currentArray, currentIndex, currentOpts);

			currentArray = selectedOpts	= [];
			currentIndex = selectedIndex = 0;
			currentOpts = selectedOpts	= {};

			busy = false;
		}

		if (currentOpts.transitionOut == 'elastic') {
			start_pos = _get_zoom_from();

			var pos = wrap.position();

			final_pos = {
				top	 : pos.top ,
				left : pos.left,
				width :	wrap.width(),
				height : wrap.height()
			};

			if (currentOpts.opacity) {
				final_pos.opacity = 1;
			}

			title.empty().hide();

			fx.prop = 1;

			$(fx).animate({ prop: 0 }, {
				 duration : currentOpts.speedOut,
				 easing : currentOpts.easingOut,
				 step : _draw,
				 complete : _cleanup
			});

		} else {
			console.log('hide');
			wrap.fadeOut( currentOpts.transitionOut == 'none' ? 0 : currentOpts.speedOut, _cleanup);
		}
	};

	$.fancybox.resize = function() {
		if (overlay.is(':visible')) {
			overlay.css('height', $(document).height());
		}

		$.fancybox.center(true);
	};

	$.fancybox.center = function() {
		var view, align;

		if (busy) {
			return;
		}

		align = arguments[0] === true ? 1 : 0;
		view = _get_viewport();

		if (!align && (wrap.width() > view[0] || wrap.height() > view[1])) {
			return;
		}

		wrap
			.stop()
			.animate({
				'top' : parseInt(Math.max(view[3] - 20, view[3] + ((view[1] - content.height() - 40) * 0.5) - currentOpts.padding)),
				'left' : parseInt(Math.max(view[2] - 20, view[2] + ((view[0] - content.width() - 40) * 0.5) - currentOpts.padding))
			}, typeof arguments[0] == 'number' ? arguments[0] : 200);
	};

	$.fancybox.init = function() {
		if ($("#fancybox-wrap").length) {
			return;
		}

		$('body').append(
			tmp	= $('<div id="fancybox-tmp"></div>'),
			loading	= $('<div id="fancybox-loading"><div></div></div>'),
			overlay	= $('<div id="fancybox-overlay"></div>'),
			wrap = $('<div id="fancybox-wrap"></div>')
		);

		outer = $('<div id="fancybox-outer"></div>')
			//.append('<div class="fancybox-bg" id="fancybox-bg-n"></div><div class="fancybox-bg" id="fancybox-bg-ne"></div><div class="fancybox-bg" id="fancybox-bg-e"></div><div class="fancybox-bg" id="fancybox-bg-se"></div><div class="fancybox-bg" id="fancybox-bg-s"></div><div class="fancybox-bg" id="fancybox-bg-sw"></div><div class="fancybox-bg" id="fancybox-bg-w"></div><div class="fancybox-bg" id="fancybox-bg-nw"></div>')
			.appendTo( wrap );

		outer.append(
			content = $('<div id="fancybox-content"></div>'),
			close = $('<a id="fancybox-close"></a>'),
			title = $('<div id="fancybox-title"></div>'),

			nav_left = $('<a href="javascript:;" id="fancybox-left"><span class="fancy-ico" id="fancybox-left-ico"></span></a>'),
			nav_right = $('<a href="javascript:;" id="fancybox-right"><span class="fancy-ico" id="fancybox-right-ico"></span></a>')
		);

		close.click($.fancybox.close);
		loading.click($.fancybox.cancel);

		nav_left.click(function(e) {
			e.preventDefault();
			$.fancybox.prev();
		});

		nav_right.click(function(e) {
			e.preventDefault();
			$.fancybox.next();
		});

		if ($.fn.mousewheel) {
			wrap.bind('mousewheel.fb', function(e, delta) {
				if (busy) {
					e.preventDefault();

				} else if ($(e.target).get(0).clientHeight == 0 || $(e.target).get(0).scrollHeight === $(e.target).get(0).clientHeight) {
					e.preventDefault();
					$.fancybox[ delta > 0 ? 'prev' : 'next']();
				}
			});
		}

		if (!$.support.opacity) {
			wrap.addClass('fancybox-ie');
		}

		if (isIE6) {
			loading.addClass('fancybox-ie6');
			wrap.addClass('fancybox-ie6');

			$('<iframe id="fancybox-hide-sel-frame" src="' + (/^https/i.test(window.location.href || '') ? 'javascript:void(false)' : 'about:blank' ) + '" scrolling="no" border="0" frameborder="0" tabindex="-1"></iframe>').prependTo(outer);
		}
	};

	$.fn.fancybox.defaults = {
		padding : 10,
		margin : 40,
		opacity : false,
		modal : false,
		cyclic : false,
		scrolling : 'auto',	// 'auto', 'yes' or 'no'

		width : 560,
		height : 340,

		autoScale : true,
		autoDimensions : true,
		centerOnScroll : false,

		ajax : {},
		swf : { wmode: 'transparent' },

		hideOnOverlayClick : true,
		hideOnContentClick : false,

		overlayShow : true,
		overlayOpacity : 0.7,
		overlayColor : '#777',

		titleShow : true,
		titlePosition : 'float', // 'float', 'outside', 'inside' or 'over'
		titleFormat : null,
		titleFromAlt : false,

		transitionIn : 'fade', // 'elastic', 'fade' or 'none'
		transitionOut : 'fade', // 'elastic', 'fade' or 'none'

		speedIn : 300,
		speedOut : 300,

		changeSpeed : 300,
		changeFade : 'fast',

		easingIn : 'swing',
		easingOut : 'swing',

		showCloseButton	 : true,
		showNavArrows : true,
		enableEscapeButton : true,
		enableKeyboardNav : true,

		onStart : function(){},
		onCancel : function(){},
		onComplete : function(){},
		onCleanup : function(){},
		onClosed : function(){},
		onError : function(){}
	};

	$(document).ready(function() {
		$.fancybox.init();
	});

})(jQuery);
methods.modal = $.fn.fancybox;

// call the modal functionality
$('.modal').bill('modal', {
	cyclic:true,
	titlePosition:'float'
});
	/**
 * Copyright GreenImp Web - greenimp.co.uk
 *
 * Author: GreenImp Web
 * Date Created: 16/03/13 18:46:38
 */


/*
 * jQuery FlexSlider v2.1
 * http://www.woothemes.com/flexslider/
 *
 * Copyright 2012 WooThemes
 * Free to use under the GPLv2 license.
 * http://www.gnu.org/licenses/gpl-2.0.html
 *
 * Contributing author: Tyler Smith (@mbmufffin)
 */
(function(d){d.flexslider=function(j,l){var a=d(j),c=d.extend({},d.flexslider.defaults,l),e=c.namespace,q="ontouchstart"in window||window.DocumentTouch&&document instanceof DocumentTouch,u=q?"touchend":"click",m="vertical"===c.direction,n=c.reverse,h=0<c.itemWidth,s="fade"===c.animation,t=""!==c.asNavFor,f={};d.data(j,"flexslider",a);f={init:function(){a.animating=!1;a.currentSlide=c.startAt;a.animatingTo=a.currentSlide;a.atEnd=0===a.currentSlide||a.currentSlide===a.last;a.containerSelector=c.selector.substr(0,
c.selector.search(" "));a.slides=d(c.selector,a);a.container=d(a.containerSelector,a);a.count=a.slides.length;a.syncExists=0<d(c.sync).length;"slide"===c.animation&&(c.animation="swing");a.prop=m?"top":"marginLeft";a.args={};a.manualPause=!1;var b=a,g;if(g=!c.video)if(g=!s)if(g=c.useCSS)a:{g=document.createElement("div");var p=["perspectiveProperty","WebkitPerspective","MozPerspective","OPerspective","msPerspective"],e;for(e in p)if(void 0!==g.style[p[e]]){a.pfx=p[e].replace("Perspective","").toLowerCase();
a.prop="-"+a.pfx+"-transform";g=!0;break a}g=!1}b.transitions=g;""!==c.controlsContainer&&(a.controlsContainer=0<d(c.controlsContainer).length&&d(c.controlsContainer));""!==c.manualControls&&(a.manualControls=0<d(c.manualControls).length&&d(c.manualControls));c.randomize&&(a.slides.sort(function(){return Math.round(Math.random())-0.5}),a.container.empty().append(a.slides));a.doMath();t&&f.asNav.setup();a.setup("init");c.controlNav&&f.controlNav.setup();c.directionNav&&f.directionNav.setup();c.keyboard&&
(1===d(a.containerSelector).length||c.multipleKeyboard)&&d(document).bind("keyup",function(b){b=b.keyCode;if(!a.animating&&(39===b||37===b))b=39===b?a.getTarget("next"):37===b?a.getTarget("prev"):!1,a.flexAnimate(b,c.pauseOnAction)});c.mousewheel&&a.bind("mousewheel",function(b,g){b.preventDefault();var d=0>g?a.getTarget("next"):a.getTarget("prev");a.flexAnimate(d,c.pauseOnAction)});c.pausePlay&&f.pausePlay.setup();c.slideshow&&(c.pauseOnHover&&a.hover(function(){!a.manualPlay&&!a.manualPause&&a.pause()},
function(){!a.manualPause&&!a.manualPlay&&a.play()}),0<c.initDelay?setTimeout(a.play,c.initDelay):a.play());q&&c.touch&&f.touch();(!s||s&&c.smoothHeight)&&d(window).bind("resize focus",f.resize);setTimeout(function(){c.start(a)},200)},asNav:{setup:function(){a.asNav=!0;a.animatingTo=Math.floor(a.currentSlide/a.move);a.currentItem=a.currentSlide;a.slides.removeClass(e+"active-slide").eq(a.currentItem).addClass(e+"active-slide");a.slides.click(function(b){b.preventDefault();b=d(this);var g=b.index();
!d(c.asNavFor).data("flexslider").animating&&!b.hasClass("active")&&(a.direction=a.currentItem<g?"next":"prev",a.flexAnimate(g,c.pauseOnAction,!1,!0,!0))})}},controlNav:{setup:function(){a.manualControls?f.controlNav.setupManual():f.controlNav.setupPaging()},setupPaging:function(){var b=1,g;a.controlNavScaffold=d('<ol class="'+e+"control-nav "+e+("thumbnails"===c.controlNav?"control-thumbs":"control-paging")+'"></ol>');if(1<a.pagingCount)for(var p=0;p<a.pagingCount;p++)g="thumbnails"===c.controlNav?
'<img src="'+a.slides.eq(p).attr("data-thumb")+'"/>':"<a>"+b+"</a>",a.controlNavScaffold.append("<li>"+g+"</li>"),b++;a.controlsContainer?d(a.controlsContainer).append(a.controlNavScaffold):a.append(a.controlNavScaffold);f.controlNav.set();f.controlNav.active();a.controlNavScaffold.delegate("a, img",u,function(b){b.preventDefault();b=d(this);var g=a.controlNav.index(b);b.hasClass(e+"active")||(a.direction=g>a.currentSlide?"next":"prev",a.flexAnimate(g,c.pauseOnAction))});q&&a.controlNavScaffold.delegate("a",
"click touchstart",function(a){a.preventDefault()})},setupManual:function(){a.controlNav=a.manualControls;f.controlNav.active();a.controlNav.live(u,function(b){b.preventDefault();b=d(this);var g=a.controlNav.index(b);b.hasClass(e+"active")||(g>a.currentSlide?a.direction="next":a.direction="prev",a.flexAnimate(g,c.pauseOnAction))});q&&a.controlNav.live("click touchstart",function(a){a.preventDefault()})},set:function(){a.controlNav=d("."+e+"control-nav li "+("thumbnails"===c.controlNav?"img":"a"),
a.controlsContainer?a.controlsContainer:a)},active:function(){a.controlNav.removeClass(e+"active").eq(a.animatingTo).addClass(e+"active")},update:function(b,c){1<a.pagingCount&&"add"===b?a.controlNavScaffold.append(d("<li><a>"+a.count+"</a></li>")):1===a.pagingCount?a.controlNavScaffold.find("li").remove():a.controlNav.eq(c).closest("li").remove();f.controlNav.set();1<a.pagingCount&&a.pagingCount!==a.controlNav.length?a.update(c,b):f.controlNav.active()}},directionNav:{setup:function(){var b=d('<ul class="'+
e+'direction-nav"><li><a class="'+e+'prev" href="#">'+c.prevText+'</a></li><li><a class="'+e+'next" href="#">'+c.nextText+"</a></li></ul>");a.controlsContainer?(d(a.controlsContainer).append(b),a.directionNav=d("."+e+"direction-nav li a",a.controlsContainer)):(a.append(b),a.directionNav=d("."+e+"direction-nav li a",a));f.directionNav.update();a.directionNav.bind(u,function(b){b.preventDefault();b=d(this).hasClass(e+"next")?a.getTarget("next"):a.getTarget("prev");a.flexAnimate(b,c.pauseOnAction)});
q&&a.directionNav.bind("click touchstart",function(a){a.preventDefault()})},update:function(){var b=e+"disabled";1===a.pagingCount?a.directionNav.addClass(b):c.animationLoop?a.directionNav.removeClass(b):0===a.animatingTo?a.directionNav.removeClass(b).filter("."+e+"prev").addClass(b):a.animatingTo===a.last?a.directionNav.removeClass(b).filter("."+e+"next").addClass(b):a.directionNav.removeClass(b)}},pausePlay:{setup:function(){var b=d('<div class="'+e+'pauseplay"><a></a></div>');a.controlsContainer?
(a.controlsContainer.append(b),a.pausePlay=d("."+e+"pauseplay a",a.controlsContainer)):(a.append(b),a.pausePlay=d("."+e+"pauseplay a",a));f.pausePlay.update(c.slideshow?e+"pause":e+"play");a.pausePlay.bind(u,function(b){b.preventDefault();d(this).hasClass(e+"pause")?(a.manualPause=!0,a.manualPlay=!1,a.pause()):(a.manualPause=!1,a.manualPlay=!0,a.play())});q&&a.pausePlay.bind("click touchstart",function(a){a.preventDefault()})},update:function(b){"play"===b?a.pausePlay.removeClass(e+"pause").addClass(e+
"play").text(c.playText):a.pausePlay.removeClass(e+"play").addClass(e+"pause").text(c.pauseText)}},touch:function(){function b(b){k=m?d-b.touches[0].pageY:d-b.touches[0].pageX;q=m?Math.abs(k)<Math.abs(b.touches[0].pageX-e):Math.abs(k)<Math.abs(b.touches[0].pageY-e);if(!q||500<Number(new Date)-l)b.preventDefault(),!s&&a.transitions&&(c.animationLoop||(k/=0===a.currentSlide&&0>k||a.currentSlide===a.last&&0<k?Math.abs(k)/r+2:1),a.setProps(f+k,"setTouch"))}function g(){j.removeEventListener("touchmove",
b,!1);if(a.animatingTo===a.currentSlide&&!q&&null!==k){var h=n?-k:k,m=0<h?a.getTarget("next"):a.getTarget("prev");a.canAdvance(m)&&(550>Number(new Date)-l&&50<Math.abs(h)||Math.abs(h)>r/2)?a.flexAnimate(m,c.pauseOnAction):s||a.flexAnimate(a.currentSlide,c.pauseOnAction,!0)}j.removeEventListener("touchend",g,!1);f=k=e=d=null}var d,e,f,r,k,l,q=!1;j.addEventListener("touchstart",function(k){a.animating?k.preventDefault():1===k.touches.length&&(a.pause(),r=m?a.h:a.w,l=Number(new Date),f=h&&n&&a.animatingTo===
a.last?0:h&&n?a.limit-(a.itemW+c.itemMargin)*a.move*a.animatingTo:h&&a.currentSlide===a.last?a.limit:h?(a.itemW+c.itemMargin)*a.move*a.currentSlide:n?(a.last-a.currentSlide+a.cloneOffset)*r:(a.currentSlide+a.cloneOffset)*r,d=m?k.touches[0].pageY:k.touches[0].pageX,e=m?k.touches[0].pageX:k.touches[0].pageY,j.addEventListener("touchmove",b,!1),j.addEventListener("touchend",g,!1))},!1)},resize:function(){!a.animating&&a.is(":visible")&&(h||a.doMath(),s?f.smoothHeight():h?(a.slides.width(a.computedW),
a.update(a.pagingCount),a.setProps()):m?(a.viewport.height(a.h),a.setProps(a.h,"setTotal")):(c.smoothHeight&&f.smoothHeight(),a.newSlides.width(a.computedW),a.setProps(a.computedW,"setTotal")))},smoothHeight:function(b){if(!m||s){var c=s?a:a.viewport;b?c.animate({height:a.slides.eq(a.animatingTo).height()},b):c.height(a.slides.eq(a.animatingTo).height())}},sync:function(b){var g=d(c.sync).data("flexslider"),e=a.animatingTo;switch(b){case "animate":g.flexAnimate(e,c.pauseOnAction,!1,!0);break;case "play":!g.playing&&
!g.asNav&&g.play();break;case "pause":g.pause()}}};a.flexAnimate=function(b,g,p,j,l){t&&1===a.pagingCount&&(a.direction=a.currentItem<b?"next":"prev");if(!a.animating&&(a.canAdvance(b,l)||p)&&a.is(":visible")){if(t&&j)if(p=d(c.asNavFor).data("flexslider"),a.atEnd=0===b||b===a.count-1,p.flexAnimate(b,!0,!1,!0,l),a.direction=a.currentItem<b?"next":"prev",p.direction=a.direction,Math.ceil((b+1)/a.visible)-1!==a.currentSlide&&0!==b)a.currentItem=b,a.slides.removeClass(e+"active-slide").eq(b).addClass(e+
"active-slide"),b=Math.floor(b/a.visible);else return a.currentItem=b,a.slides.removeClass(e+"active-slide").eq(b).addClass(e+"active-slide"),!1;a.animating=!0;a.animatingTo=b;c.before(a);g&&a.pause();a.syncExists&&!l&&f.sync("animate");c.controlNav&&f.controlNav.active();h||a.slides.removeClass(e+"active-slide").eq(b).addClass(e+"active-slide");a.atEnd=0===b||b===a.last;c.directionNav&&f.directionNav.update();b===a.last&&(c.end(a),c.animationLoop||a.pause());if(s)q?(a.slides.eq(a.currentSlide).css({opacity:0,
zIndex:1}),a.slides.eq(b).css({opacity:1,zIndex:2}),a.slides.unbind("webkitTransitionEnd transitionend"),a.slides.eq(a.currentSlide).bind("webkitTransitionEnd transitionend",function(){c.after(a)}),a.animating=!1,a.currentSlide=a.animatingTo):(a.slides.eq(a.currentSlide).fadeOut(c.animationSpeed,c.easing),a.slides.eq(b).fadeIn(c.animationSpeed,c.easing,a.wrapup));else{var r=m?a.slides.filter(":first").height():a.computedW;h?(b=c.itemWidth>a.w?2*c.itemMargin:c.itemMargin,b=(a.itemW+b)*a.move*a.animatingTo,
b=b>a.limit&&1!==a.visible?a.limit:b):b=0===a.currentSlide&&b===a.count-1&&c.animationLoop&&"next"!==a.direction?n?(a.count+a.cloneOffset)*r:0:a.currentSlide===a.last&&0===b&&c.animationLoop&&"prev"!==a.direction?n?0:(a.count+1)*r:n?(a.count-1-b+a.cloneOffset)*r:(b+a.cloneOffset)*r;a.setProps(b,"",c.animationSpeed);if(a.transitions){if(!c.animationLoop||!a.atEnd)a.animating=!1,a.currentSlide=a.animatingTo;a.container.unbind("webkitTransitionEnd transitionend");a.container.bind("webkitTransitionEnd transitionend",
function(){a.wrapup(r)})}else a.container.animate(a.args,c.animationSpeed,c.easing,function(){a.wrapup(r)})}c.smoothHeight&&f.smoothHeight(c.animationSpeed)}};a.wrapup=function(b){!s&&!h&&(0===a.currentSlide&&a.animatingTo===a.last&&c.animationLoop?a.setProps(b,"jumpEnd"):a.currentSlide===a.last&&(0===a.animatingTo&&c.animationLoop)&&a.setProps(b,"jumpStart"));a.animating=!1;a.currentSlide=a.animatingTo;c.after(a)};a.animateSlides=function(){a.animating||a.flexAnimate(a.getTarget("next"))};a.pause=
function(){clearInterval(a.animatedSlides);a.playing=!1;c.pausePlay&&f.pausePlay.update("play");a.syncExists&&f.sync("pause")};a.play=function(){a.animatedSlides=setInterval(a.animateSlides,c.slideshowSpeed);a.playing=!0;c.pausePlay&&f.pausePlay.update("pause");a.syncExists&&f.sync("play")};a.canAdvance=function(b,g){var d=t?a.pagingCount-1:a.last;return g?!0:t&&a.currentItem===a.count-1&&0===b&&"prev"===a.direction?!0:t&&0===a.currentItem&&b===a.pagingCount-1&&"next"!==a.direction?!1:b===a.currentSlide&&
!t?!1:c.animationLoop?!0:a.atEnd&&0===a.currentSlide&&b===d&&"next"!==a.direction?!1:a.atEnd&&a.currentSlide===d&&0===b&&"next"===a.direction?!1:!0};a.getTarget=function(b){a.direction=b;return"next"===b?a.currentSlide===a.last?0:a.currentSlide+1:0===a.currentSlide?a.last:a.currentSlide-1};a.setProps=function(b,g,d){var e,f=b?b:(a.itemW+c.itemMargin)*a.move*a.animatingTo;e=-1*function(){if(h)return"setTouch"===g?b:n&&a.animatingTo===a.last?0:n?a.limit-(a.itemW+c.itemMargin)*a.move*a.animatingTo:a.animatingTo===
a.last?a.limit:f;switch(g){case "setTotal":return n?(a.count-1-a.currentSlide+a.cloneOffset)*b:(a.currentSlide+a.cloneOffset)*b;case "setTouch":return b;case "jumpEnd":return n?b:a.count*b;case "jumpStart":return n?a.count*b:b;default:return b}}()+"px";a.transitions&&(e=m?"translate3d(0,"+e+",0)":"translate3d("+e+",0,0)",d=void 0!==d?d/1E3+"s":"0s",a.container.css("-"+a.pfx+"-transition-duration",d));a.args[a.prop]=e;(a.transitions||void 0===d)&&a.container.css(a.args)};a.setup=function(b){if(s)a.slides.css({width:"100%",
"float":"left",marginRight:"-100%",position:"relative"}),"init"===b&&(q?a.slides.css({opacity:0,display:"block",webkitTransition:"opacity "+c.animationSpeed/1E3+"s ease",zIndex:1}).eq(a.currentSlide).css({opacity:1,zIndex:2}):a.slides.eq(a.currentSlide).fadeIn(c.animationSpeed,c.easing)),c.smoothHeight&&f.smoothHeight();else{var g,p;"init"===b&&(a.viewport=d('<div class="'+e+'viewport"></div>').css({overflow:"hidden",position:"relative"}).appendTo(a).append(a.container),a.cloneCount=0,a.cloneOffset=
0,n&&(p=d.makeArray(a.slides).reverse(),a.slides=d(p),a.container.empty().append(a.slides)));c.animationLoop&&!h&&(a.cloneCount=2,a.cloneOffset=1,"init"!==b&&a.container.find(".clone").remove(),a.container.append(a.slides.first().clone().addClass("clone")).prepend(a.slides.last().clone().addClass("clone")));a.newSlides=d(c.selector,a);g=n?a.count-1-a.currentSlide+a.cloneOffset:a.currentSlide+a.cloneOffset;m&&!h?(a.container.height(200*(a.count+a.cloneCount)+"%").css("position","absolute").width("100%"),
setTimeout(function(){a.newSlides.css({display:"block"});a.doMath();a.viewport.height(a.h);a.setProps(g*a.h,"init")},"init"===b?100:0)):(a.container.width(200*(a.count+a.cloneCount)+"%"),a.setProps(g*a.computedW,"init"),setTimeout(function(){a.doMath();a.newSlides.css({width:a.computedW,"float":"left",display:"block"});c.smoothHeight&&f.smoothHeight()},"init"===b?100:0))}h||a.slides.removeClass(e+"active-slide").eq(a.currentSlide).addClass(e+"active-slide")};a.doMath=function(){var b=a.slides.first(),
d=c.itemMargin,e=c.minItems,f=c.maxItems;a.w=a.width();a.h=b.height();a.boxPadding=b.outerWidth()-b.width();h?(a.itemT=c.itemWidth+d,a.minW=e?e*a.itemT:a.w,a.maxW=f?f*a.itemT:a.w,a.itemW=a.minW>a.w?(a.w-d*e)/e:a.maxW<a.w?(a.w-d*f)/f:c.itemWidth>a.w?a.w:c.itemWidth,a.visible=Math.floor(a.w/(a.itemW+d)),a.move=0<c.move&&c.move<a.visible?c.move:a.visible,a.pagingCount=Math.ceil((a.count-a.visible)/a.move+1),a.last=a.pagingCount-1,a.limit=1===a.pagingCount?0:c.itemWidth>a.w?(a.itemW+2*d)*a.count-a.w-
d:(a.itemW+d)*a.count-a.w-d):(a.itemW=a.w,a.pagingCount=a.count,a.last=a.count-1);a.computedW=a.itemW-a.boxPadding};a.update=function(b,d){a.doMath();h||(b<a.currentSlide?a.currentSlide+=1:b<=a.currentSlide&&0!==b&&(a.currentSlide-=1),a.animatingTo=a.currentSlide);if(c.controlNav&&!a.manualControls)if("add"===d&&!h||a.pagingCount>a.controlNav.length)f.controlNav.update("add");else if("remove"===d&&!h||a.pagingCount<a.controlNav.length)h&&a.currentSlide>a.last&&(a.currentSlide-=1,a.animatingTo-=1),
f.controlNav.update("remove",a.last);c.directionNav&&f.directionNav.update()};a.addSlide=function(b,e){var f=d(b);a.count+=1;a.last=a.count-1;m&&n?void 0!==e?a.slides.eq(a.count-e).after(f):a.container.prepend(f):void 0!==e?a.slides.eq(e).before(f):a.container.append(f);a.update(e,"add");a.slides=d(c.selector+":not(.clone)",a);a.setup();c.added(a)};a.removeSlide=function(b){var e=isNaN(b)?a.slides.index(d(b)):b;a.count-=1;a.last=a.count-1;isNaN(b)?d(b,a.slides).remove():m&&n?a.slides.eq(a.last).remove():
a.slides.eq(b).remove();a.doMath();a.update(e,"remove");a.slides=d(c.selector+":not(.clone)",a);a.setup();c.removed(a)};f.init()};d.flexslider.defaults={namespace:"flex-",selector:".slides > li",animation:"fade",easing:"swing",direction:"horizontal",reverse:!1,animationLoop:!0,smoothHeight:!1,startAt:0,slideshow:!0,slideshowSpeed:7E3,animationSpeed:600,initDelay:0,randomize:!1,pauseOnAction:!0,pauseOnHover:!1,useCSS:!0,touch:!0,video:!1,controlNav:!0,directionNav:!0,prevText:"Previous",nextText:"Next",
keyboard:!0,multipleKeyboard:!1,mousewheel:!1,pausePlay:!1,pauseText:"Pause",playText:"Play",controlsContainer:"",manualControls:"",sync:"",asNavFor:"",itemWidth:0,itemMargin:0,minItems:0,maxItems:0,move:0,start:function(){},before:function(){},after:function(){},end:function(){},added:function(){},removed:function(){}};d.fn.flexslider=function(j){void 0===j&&(j={});if("object"===typeof j)return this.each(function(){var a=d(this),c=a.find(j.selector?j.selector:".slides > li");1===c.length?(c.fadeIn(400),
j.start&&j.start(a)):void 0==a.data("flexslider")&&new d.flexslider(this,j)});var l=d(this).data("flexslider");switch(j){case "play":l.play();break;case "pause":l.pause();break;case "next":l.flexAnimate(l.getTarget("next"),!0);break;case "prev":case "previous":l.flexAnimate(l.getTarget("prev"),!0);break;default:"number"===typeof j&&l.flexAnimate(j,!0)}}})(jQuery);
methods.slider = $.fn.flexslider;

// add the slider initializer to the onLoad call
// it needs to be onLoad, otherwise it doesn't detect image heights correctly.
onLoad[onLoad.length] = function(){
	// call the slider functionality
	$('.slider').each(function(){
		var slider = $(this);
		slider.addClass('flexslider').bill('slider', {
			animation:slider.hasClass('fade') ? 'fade' : 'slide',
			slideshowSpeed:4000,
			smoothHeight:true
		});
	});
};

	/**
	 * Run any UI JS that needs to be run on page load
	 */
	if(onLoad.length > 0){
		$(window).on('load', function(){
			$.each(onLoad, function(i, loadF){
				loadF.call(this);
			});
		});
	}
})(jQuery, window, document);